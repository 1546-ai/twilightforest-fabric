plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
}

loom {
    accessWidenerPath = file("src/main/resources/twilight.aw")
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.mod_id
version = project.mod_version
group = project.group_name

repositories {
    maven {
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
    maven {
        name = "ParchmentMC"
        url = "https://maven.parchmentmc.net/"
    }
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
    }
    maven {
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.17.1:BLEEDING-SNAPSHOT")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'net.patchworkmc:event-racecar:1.0.1:with-typetools'
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:6.0.245-alpha"
    modRuntime "me.shedaniel:RoughlyEnoughItems-fabric:6.0.245-alpha"
    modApi "alexiil.mc.lib:libblockattributes-fluids:0.9.0-pre.1"
    modApi "com.terraformersmc:modmenu:2.0.2"
    modApi("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("net.devtech:arrp:0.+")
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:3.0.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-chunk:3.0.0"

    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:3.0.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-chunk:3.0.0"
    /*modImplementation ('net.oskarstrom:DashLoader:2.1-dev4') {
        exclude group: 'net.fabricmc.fabric-api'
    }*/
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}